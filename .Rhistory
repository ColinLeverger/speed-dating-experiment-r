geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd) +
coord_flip()
### Work and studies analysis ###
fields.cd <- c(
"Law",
"Math",
"Social Science, Psychologist" ,
"Medical Science, Pharmaceuticals, and Bio Tech",
"Engineering",
"English/Creative Writing/ Journalism",
"History/Religion/Philosophy",
"Business/Econ/Finance",
"Education, Academia",
"Biological Sciences/Chemistry/Physics",
"Social Work" ,
"Undergrad/undecided" ,
"Political Science/International Affairs" ,
"Film",
"Fine Arts/Arts Administration",
"Languages",
"Architecture",
"Other"
)
fields <- df[!is.na(df$field_cd),] %>%
group_by(gender, field_cd) %>%
summarise(
myN = n()
)
ggplot(fields, aes(x = field_cd, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd) +
coord_flip()
ggplot(fields, aes(x = field_cd, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd,breaks = c(2,5,8)) +
coord_flip()
ggplot(fields, aes(x = field_cd, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = c("test", "test2", "test22"),breaks = c(2,5,8)) +
coord_flip()
ggplot(fields, aes(x = field_cd, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd, breaks = c(1:18)) +
coord_flip()
careers <- df[!is.na(df$career_c),] %>%
group_by(gender, career_c) %>%
summarise(
myN = n()
)
ggplot(careers, aes(x = field_cd, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd, breaks = c(1:18)) +
coord_flip()
ggplot(careers, aes(x = career_c, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd, breaks = c(1:18)) +
coord_flip()
View(careers)
ordered(unique(fields$field_cd))
ordered(careers(fields$career_c))
# Find number of men/women on each career
careers <- df[!is.na(df$career_c),] %>%
group_by(gender, career_c) %>%
summarise(
myN = n()
)
ordered(careers(fields$career_c))
ordered(unique(careers$career_c))
size(fields.cd)
lenght(fields.cd)
length(fields.cd)
fields.cd <- c(
"Law",
"Math",
"Social Science, Psychologist" ,
"Medical Science, Pharmaceuticals, and Bio Tech",
"Engineering",
"English/Creative Writing/ Journalism",
"History/Religion/Philosophy",
"Business/Econ/Finance",
"Education, Academia",
"Biological Sciences/Chemistry/Physics",
"Social Work" ,
"Undergrad/undecided" ,
"Political Science/International Affairs" ,
"Film",
"Fine Arts/Arts Administration",
"Languages",
"Architecture",
"Other"
)
length(fields.cd)
fields <- df[!is.na(df$field_cd),] %>%
group_by(gender, field_cd) %>%
summarise(
myN = n()
)
length(unique(fields$field_cd))
ggplot(fields, aes(x = field_cd, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd) +
coord_flip()
ggplot(fields, aes(x = field_cd, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd, breaks = 2:19) +
coord_flip()
ggplot(fields, aes(x = field_cd, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd, breaks = 1:18) +
coord_flip()
ordered(unique(careers$career_c))
# Should be equal to 18
length(unique(fields$field_cd))
length(unique(careers$career_c))
ordered(unique(careers$career_c))
ggplot(careers, aes(x = career_c, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd) +
coord_flip()
ggplot(careers, aes(x = career_c, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = fields.cd, breaks = 1:18) +
coord_flip()
lenght(career.cd)
career.cd <- c(
"Lawyer",
"Academic/Research",
"Psychologist",
"Doctor/Medicine",
"Engineer",
"Creative Arts/Entertainment",
"Banking/Consulting/Finance/Marketing/Business/CEO/Entrepreneur/Admin",
"Real Estate",
"International/Humanitarian Affairs",
"Undecided" ,
"Social Work",
"Speech Pathology",
"Politics",
"Pro sports/Athletics",
"Other",
"Journalism",
"Architecture"
)
lenght(career.cd)
career.cd <- c(
"Lawyer",
"Academic/Research",
"Psychologist",
"Doctor/Medicine",
"Engineer",
"Creative Arts/Entertainment",
"Banking/Consulting/Finance/Marketing/Business/CEO/Entrepreneur/Admin",
"Real Estate",
"International/Humanitarian Affairs",
"Undecided" ,
"Social Work",
"Speech Pathology",
"Politics",
"Pro sports/Athletics",
"Other",
"Journalism",
"Architecture"
)
length(career.cd)
ggplot(careers, aes(x = career_c, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Field Coded") + ylab("Count") +
scale_x_continuous(labels = career.cd, breaks = 1:17) +
coord_flip()
race.c <- c(
"Black/African American",
"European/Caucasian-American",
"Latino/Hispanic American",
"Asian/Pacific Islander/Asian-American",
"Native American",
"Other"
)
races <- df[!is.na(df$race),] %>%
group_by(gender, race) %>%
summarise(
myN = n()
)
View(races)
ggplot(races, aes(x = race, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Race") + ylab("Count") +
scale_x_continuous(labels = race.c, breaks = 1:6) +
coord_flip()
goal.c <- c(
"Seemed like a fun night out",
"To meet new people",
"To get a date",
"Looking for a serious relationship",
"To say I did it",
"Other"
)
goal <- df[!is.na(df$goal),] %>%
group_by(gender, goal) %>%
summarise(
myN = n()
)
goals <- df[!is.na(df$goal),] %>%
group_by(gender, goal) %>%
summarise(
myN = n()
)
rm(goal)
group_by(gender, goal) %>%
summarise(
myN = n()
)
# Plot goals repartition
ggplot(goals, aes(x = goal, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Goal") + ylab("Count") +
scale_x_continuous(labels = race.c, breaks = 1:6) +
coord_flip()
View(goals)
ggplot(goals, aes(x = goal, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Goal") + ylab("Count") +
scale_x_continuous(labels = goal.c, breaks = 1:6) +
coord_flip()
View(df)
ggplot(races, aes(x = race, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Race") + ylab("Count") +
scale_x_continuous(labels = race.c, breaks = 1:6) +
coord_flip()
ggplot(match.by.waves, aes(x = wave, y = nb_matches)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Wave number") + ylab("Matches")
date.c <- c(
"Several times a week",
"Twice a week",
"Once a week",
"Twice a month",
"Once a month",
"Several times a year",
"Almost never"
)
dates <- df[!is.na(df$date),] %>%
group_by(gender, date) %>%
summarise(
myN = n()
)
go.outs <- df[!is.na(df$go_out),] %>%
group_by(gender, go_out) %>%
summarise(
myN = n()
)
dates <- df[!is.na(df$date),] %>%
group_by(gender, date) %>%
summarise(
myN = n()
)
go.outs <- df[!is.na(df$go_out),] %>%
group_by(gender, go_out) %>%
summarise(
myN = n()
)
# Plot dates repartition
ggplot(dates, aes(x = date, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Date") + ylab("Count") +
scale_x_continuous(labels = date.c, breaks = 1:7) +
coord_flip()
ggplot(go.outs, aes(x = go_out, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Go out") + ylab("Count") +
scale_x_continuous(labels = date.c, breaks = 1:7) +
coord_flip()
match.by.gender <- df %>%
group_by(gender) %>%
summarise(
nb_matches = sum(match == 1),
nb_fails = sum(match == 0)
) %>%
melt(id.vars = "gender")
ggplot(match.by.gender, aes(x = variable, y = value, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Result") + ylab("Count")
match.by.waves <- df[df$match == 1,] %>%
group_by(wave) %>%
summarise(
nb_matches = sum(match == 1)
)
ggplot(match.by.waves, aes(x = wave, y = nb_matches)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Wave number") + ylab("Matches")
View(match.by.waves)
match.by.gender.and.wave <- df %>%
group_by(gender, wave) %>%
summarise(
nb_matches = sum(match == 1),
nb_fails = sum(match == 0)
)
View(match.by.gender.and.wave)
match.by.gender.and.wave <- df %>%
group_by(gender, wave) %>%
summarise(
nb_matches = sum(match == 1)
)
View(match.by.gender)
View(match.by.gender.and.wave)
ggplot(match.by.gender.and.wave, aes(x = wave, y = nb_matches, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Wave") + ylab("Count") +
scale_x_continuous(labels = date.c, breaks = 1:7) +
coord_flip()
ggplot(match.by.gender.and.wave, aes(x = wave, y = nb_matches, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Wave") + ylab("Count")
View(df)
gephy <- df[c(1, 12),]
View(go.outs)
View(gephy)
gephy <- df[,c(1, 12)]
View(gephy)
write_csv(gephy, "Gephy.csv")
gephy$pid <- as.numeric(gephy$pid)
View(gephy)
write_csv(gephy, "Gephy.csv")
View(gephy)
View(gephy)
View(gephy)
gephy
rm(gephy)
gephi <- df[,c(1, 12)]
gephi$pid <- as.numeric(gephi$pid)
write_csv(gephy, "gephi.csv")
write_csv(gephi, "gephi.csv")
?write.csv
gephi <- df[,c(1, 12)]
names(gephi)[1]<-paste("Source")
names(gephi)[2]<-paste("Target")
View(gephi)
ggplot(match.by.waves, aes(x = wave, y = nb_matches)) +
geom_bar(stat = "identity", position = "dodge") +
xlab("Wave number") + ylab("Matches")
ggplot(match.by.gender, aes(x = variable, y = value, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Result") + ylab("Count")
ggplot(go.outs, aes(x = go_out, y = myN, fill = factor(gender))) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_discrete(name = "Gender") +
xlab("Go out") + ylab("Count") +
scale_x_continuous(labels = date.c, breaks = 1:7) +
coord_flip()
View(gephi)
write_csv(gephi, "gephi.csv")
?write_csv
table(gephi)
data.frame(gephi)
write_csv(data.frame(gephi), "gephi.csv")
str(gephi)
gephi$Target <- as.integer(gephi$Target)
str(gephi)
write_csv(gephi, "gephi.csv")
letters
myfunction <- function(my.name){
my.str.split <- strsplit(my.name)
tmp = sum(sapply(my.str.split, function(x) which(letters == x))) %% 28
letters[1+tmp]
}
myfunction("colin")
myfunction <- function(my.name){
my.str.split <- strsplit(my.name, "")
tmp = sum(sapply(my.str.split, function(x) which(letters == x))) %% 28
return(letters[1+tmp])
}
myfunction("colin")
myfunction <- function(my.name){
my.str.split <- strsplit(my.name, "")
tmp = sum(sapply(my.str.split, function(x) which(letters == x))) %% 26
return(letters[1 + tmp])
}
myfunction("colin")
myfunction <- function(my.name){
my.str.split <- strsplit(my.name, "")
tmp = sum(sapply(my.str.split, function(x) which(letters == x))) %% 9
return(letters[1 + tmp])
}
myfunction("colin")
length(letters)
myfunction <- function(my.name){
my.str.split <- strsplit(my.name, "")
tmp = sum(sapply(my.str.split, function(x) which(letters == x))) %% length(letters)
return(letters[1 + tmp])
}
myfunction("colin")
myfunction("colin")
myfunction("keyvalue")
myfunction("column")
myfunction("graph")
myfunction("document")
myfunction("keyvalue")
myfunction("column")
myfunction("graph")
myfunction("document")
myfunction("colin")
myfunction("keyvalue")
myfunction("column")
myfunction("graph")
myfunction("document")
myfunction <- function(my.name){
my.str.split <- strsplit(my.name, "")
tmp = sum(sapply(my.str.split, function(x) which(letters == x))) %% length(letters)
return(letters[1 + tmp])
}
myfunction("colin")
myfunction("keyvalue")
myfunction("keyvalue")
myfunction("colin")
myfunction("keyvalue")
myfunction("colin")
strsplit("colin", "")
strsplit("colin", "")[1]
strsplit("colin", "")[é]
strsplit("colin", "")[2]
myfunction <- function(my.name){
my.str.split <- strsplit(my.name, "")
tmp = sum(sapply(my.str.split[1], function(x) which(letters == x))) %% length(letters)
return(letters[1 + tmp])
}
myfunction("colin")
myfunction("keyvalue")
myfunction("colin")
strsplit("colin", "")[2]
strsplit("colin", "")[1]
strsplit("colin", "")[[1]]
myfunction <- function(my.name){
my.str.split <- strsplit(my.name, "")
tmp = sum(sapply(my.str.split[[1]], function(x) which(letters == x))) %% length(letters)
return(letters[1 + tmp])
}
myfunction("colin")
myfunction("colin")
myfunction("keyvalue")
myfunction("column")
myfunction("graph")
myfunction("colin")
myfunction("keyvalue")
myfunction("column")
myfunction("graph")
myfunction("document")
myfunction <- function(my.name){
my.str.split <- strsplit(my.name, "")
tmp = sum(sapply(my.str.split[[1]], function(x) which(letters == x))) %% length(letters)
return(letters[1 + tmp])
}
myfunction("colin")
myfunction("keyvalue")
myfunction("column")
myfunction("graph")
myfunction("document")
myfunction <- function(my.name){
my.str.split <- strsplit(my.name, "")
tmp = sum(sapply(my.str.split[[1]], function(x) which(letters == x))) %% length(letters)
return(letters[1 + tmp])
}
myfunction("colin")
myfunction("keyvalue")
myfunction("column")
myfunction("graph")
myfunction("document")
myfunction("colin")
myfunction("keyvalue")
myfunction("column")
myfunction("graph")
myfunction("document")
myfunction("colin")
myfunction("keyvalue")
myfunction("column")
myfunction("malte")
myfunction("suman")
